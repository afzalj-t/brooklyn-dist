#!/bin/bash

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

### BEGIN INIT INFO
# Provides:          brooklyn
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Apache Brooklyn
# Description:       Apache Brooklyn init script
### END INIT INFO

# Author: Aleksandr Vasilev <aleksandr.vasilev@cloudsoftcorp.com>

[ -d /opt/brooklyn ] || exit 0

SERVICE_NAME="brooklyn"
PID_FILE="/var/lib/${SERVICE_NAME}/${SERVICE_NAME}.pid"
LOG_FILE="/var/log/brooklyn/service.log"
JAVA_OPTS="-Dbrooklyn.location.localhost.address=127.0.0.1 -Dlogback.configurationFile=/etc/${SERVICE_NAME}/logback.xml -Xms256m -Xmx1g -XX:MaxPermSize=256m"
CLASSPATH="/opt/${SERVICE_NAME}/conf:/opt/${SERVICE_NAME}/lib/patch/*:/opt/${SERVICE_NAME}/lib/${SERVICE_NAME}/*:/opt/${SERVICE_NAME}/lib/dropins/*"
EXEC_START="/usr/bin/java $JAVA_OPTS -cp "$CLASSPATH" org.apache.brooklyn.cli.Main launch --noGlobalBrooklynProperties --localBrooklynProperties /etc/brooklyn/brooklyn.conf --persist auto"

do_start() {
    if [ -f ${PID_FILE} ] && kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is running, pid $(cat ${PID_FILE})"
        exit 1
    else
        nohup ${EXEC_START} >> ${LOG_FILE} 2>&1 &
        if [ $? -eq 0 ]; then
            PID=$!
            echo ${PID} > ${PID_FILE}
            echo "${SERVICE_NAME} started, pid ${PID}"
        else
            echo "${SERVICE_NAME} failed to start, exiting..."
            exit 1
        fi
    fi
}

do_stop() {
    if [ ! -f ${PID_FILE} ] || ! kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is not running"
        exit 1
    else
        kill $(cat ${PID_FILE}) && rm -f ${PID_FILE}
        echo "${SERVICE_NAME} stopped"
    fi
}

do_status() {
    if [ -f ${PID_FILE} ] && kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is running, pid $(cat ${PID_FILE})"
    else
        echo "${SERVICE_NAME} is not running"
    fi
}

case $1 in
    start)
        do_start
    ;;
    stop)
        do_stop
    ;;
    restart|force-reload)
        do_stop
        do_start
    ;;
    status)
        do_status
    ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac
